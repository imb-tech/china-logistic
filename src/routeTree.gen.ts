/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as MainIndexImport } from './routes/_main/index'
import { Route as MainSettingsImport } from './routes/_main/settings'
import { Route as MainSellersImport } from './routes/_main/sellers'
import { Route as MainProductsImport } from './routes/_main/products'
import { Route as MainOrdersImport } from './routes/_main/orders'
import { Route as MainMyProductsImport } from './routes/_main/my-products'
import { Route as MainDashboardImport } from './routes/_main/dashboard'
import { Route as MainCustomersImport } from './routes/_main/customers'
import { Route as MainCategoriesImport } from './routes/_main/categories'
import { Route as MainApplicationsImport } from './routes/_main/applications'
import { Route as MainSellerIdImport } from './routes/_main/_seller/$id'
import { Route as MainProductsProductCreateImport } from './routes/_main/_products/product-create'

// Create Virtual Routes

const AuthAuthLazyImport = createFileRoute('/_auth/auth')()

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const AuthAuthLazyRoute = AuthAuthLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/auth.lazy').then((d) => d.Route))

const MainSettingsRoute = MainSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => MainRoute,
} as any)

const MainSellersRoute = MainSellersImport.update({
  id: '/sellers',
  path: '/sellers',
  getParentRoute: () => MainRoute,
} as any)

const MainProductsRoute = MainProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => MainRoute,
} as any)

const MainOrdersRoute = MainOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => MainRoute,
} as any)

const MainMyProductsRoute = MainMyProductsImport.update({
  id: '/my-products',
  path: '/my-products',
  getParentRoute: () => MainRoute,
} as any)

const MainDashboardRoute = MainDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => MainRoute,
} as any)

const MainCustomersRoute = MainCustomersImport.update({
  id: '/customers',
  path: '/customers',
  getParentRoute: () => MainRoute,
} as any)

const MainCategoriesRoute = MainCategoriesImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => MainRoute,
} as any)

const MainApplicationsRoute = MainApplicationsImport.update({
  id: '/applications',
  path: '/applications',
  getParentRoute: () => MainRoute,
} as any)

const MainSellerIdRoute = MainSellerIdImport.update({
  id: '/_seller/$id',
  path: '/$id',
  getParentRoute: () => MainRoute,
} as any)

const MainProductsProductCreateRoute = MainProductsProductCreateImport.update({
  id: '/_products/product-create',
  path: '/product-create',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_main/applications': {
      id: '/_main/applications'
      path: '/applications'
      fullPath: '/applications'
      preLoaderRoute: typeof MainApplicationsImport
      parentRoute: typeof MainImport
    }
    '/_main/categories': {
      id: '/_main/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof MainCategoriesImport
      parentRoute: typeof MainImport
    }
    '/_main/customers': {
      id: '/_main/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof MainCustomersImport
      parentRoute: typeof MainImport
    }
    '/_main/dashboard': {
      id: '/_main/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainDashboardImport
      parentRoute: typeof MainImport
    }
    '/_main/my-products': {
      id: '/_main/my-products'
      path: '/my-products'
      fullPath: '/my-products'
      preLoaderRoute: typeof MainMyProductsImport
      parentRoute: typeof MainImport
    }
    '/_main/orders': {
      id: '/_main/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof MainOrdersImport
      parentRoute: typeof MainImport
    }
    '/_main/products': {
      id: '/_main/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof MainProductsImport
      parentRoute: typeof MainImport
    }
    '/_main/sellers': {
      id: '/_main/sellers'
      path: '/sellers'
      fullPath: '/sellers'
      preLoaderRoute: typeof MainSellersImport
      parentRoute: typeof MainImport
    }
    '/_main/settings': {
      id: '/_main/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof MainSettingsImport
      parentRoute: typeof MainImport
    }
    '/_auth/auth': {
      id: '/_auth/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLazyImport
      parentRoute: typeof AuthImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/_products/product-create': {
      id: '/_main/_products/product-create'
      path: '/product-create'
      fullPath: '/product-create'
      preLoaderRoute: typeof MainProductsProductCreateImport
      parentRoute: typeof MainImport
    }
    '/_main/_seller/$id': {
      id: '/_main/_seller/$id'
      path: '/$id'
      fullPath: '/$id'
      preLoaderRoute: typeof MainSellerIdImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLazyRoute: typeof AuthAuthLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLazyRoute: AuthAuthLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainRouteChildren {
  MainApplicationsRoute: typeof MainApplicationsRoute
  MainCategoriesRoute: typeof MainCategoriesRoute
  MainCustomersRoute: typeof MainCustomersRoute
  MainDashboardRoute: typeof MainDashboardRoute
  MainMyProductsRoute: typeof MainMyProductsRoute
  MainOrdersRoute: typeof MainOrdersRoute
  MainProductsRoute: typeof MainProductsRoute
  MainSellersRoute: typeof MainSellersRoute
  MainSettingsRoute: typeof MainSettingsRoute
  MainIndexRoute: typeof MainIndexRoute
  MainProductsProductCreateRoute: typeof MainProductsProductCreateRoute
  MainSellerIdRoute: typeof MainSellerIdRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainApplicationsRoute: MainApplicationsRoute,
  MainCategoriesRoute: MainCategoriesRoute,
  MainCustomersRoute: MainCustomersRoute,
  MainDashboardRoute: MainDashboardRoute,
  MainMyProductsRoute: MainMyProductsRoute,
  MainOrdersRoute: MainOrdersRoute,
  MainProductsRoute: MainProductsRoute,
  MainSellersRoute: MainSellersRoute,
  MainSettingsRoute: MainSettingsRoute,
  MainIndexRoute: MainIndexRoute,
  MainProductsProductCreateRoute: MainProductsProductCreateRoute,
  MainSellerIdRoute: MainSellerIdRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MainRouteWithChildren
  '/applications': typeof MainApplicationsRoute
  '/categories': typeof MainCategoriesRoute
  '/customers': typeof MainCustomersRoute
  '/dashboard': typeof MainDashboardRoute
  '/my-products': typeof MainMyProductsRoute
  '/orders': typeof MainOrdersRoute
  '/products': typeof MainProductsRoute
  '/sellers': typeof MainSellersRoute
  '/settings': typeof MainSettingsRoute
  '/auth': typeof AuthAuthLazyRoute
  '/': typeof MainIndexRoute
  '/product-create': typeof MainProductsProductCreateRoute
  '/$id': typeof MainSellerIdRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/applications': typeof MainApplicationsRoute
  '/categories': typeof MainCategoriesRoute
  '/customers': typeof MainCustomersRoute
  '/dashboard': typeof MainDashboardRoute
  '/my-products': typeof MainMyProductsRoute
  '/orders': typeof MainOrdersRoute
  '/products': typeof MainProductsRoute
  '/sellers': typeof MainSellersRoute
  '/settings': typeof MainSettingsRoute
  '/auth': typeof AuthAuthLazyRoute
  '/': typeof MainIndexRoute
  '/product-create': typeof MainProductsProductCreateRoute
  '/$id': typeof MainSellerIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_main/applications': typeof MainApplicationsRoute
  '/_main/categories': typeof MainCategoriesRoute
  '/_main/customers': typeof MainCustomersRoute
  '/_main/dashboard': typeof MainDashboardRoute
  '/_main/my-products': typeof MainMyProductsRoute
  '/_main/orders': typeof MainOrdersRoute
  '/_main/products': typeof MainProductsRoute
  '/_main/sellers': typeof MainSellersRoute
  '/_main/settings': typeof MainSettingsRoute
  '/_auth/auth': typeof AuthAuthLazyRoute
  '/_main/': typeof MainIndexRoute
  '/_main/_products/product-create': typeof MainProductsProductCreateRoute
  '/_main/_seller/$id': typeof MainSellerIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/applications'
    | '/categories'
    | '/customers'
    | '/dashboard'
    | '/my-products'
    | '/orders'
    | '/products'
    | '/sellers'
    | '/settings'
    | '/auth'
    | '/'
    | '/product-create'
    | '/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/applications'
    | '/categories'
    | '/customers'
    | '/dashboard'
    | '/my-products'
    | '/orders'
    | '/products'
    | '/sellers'
    | '/settings'
    | '/auth'
    | '/'
    | '/product-create'
    | '/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_main'
    | '/_main/applications'
    | '/_main/categories'
    | '/_main/customers'
    | '/_main/dashboard'
    | '/_main/my-products'
    | '/_main/orders'
    | '/_main/products'
    | '/_main/sellers'
    | '/_main/settings'
    | '/_auth/auth'
    | '/_main/'
    | '/_main/_products/product-create'
    | '/_main/_seller/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/applications",
        "/_main/categories",
        "/_main/customers",
        "/_main/dashboard",
        "/_main/my-products",
        "/_main/orders",
        "/_main/products",
        "/_main/sellers",
        "/_main/settings",
        "/_main/",
        "/_main/_products/product-create",
        "/_main/_seller/$id"
      ]
    },
    "/_main/applications": {
      "filePath": "_main/applications.tsx",
      "parent": "/_main"
    },
    "/_main/categories": {
      "filePath": "_main/categories.tsx",
      "parent": "/_main"
    },
    "/_main/customers": {
      "filePath": "_main/customers.tsx",
      "parent": "/_main"
    },
    "/_main/dashboard": {
      "filePath": "_main/dashboard.tsx",
      "parent": "/_main"
    },
    "/_main/my-products": {
      "filePath": "_main/my-products.tsx",
      "parent": "/_main"
    },
    "/_main/orders": {
      "filePath": "_main/orders.tsx",
      "parent": "/_main"
    },
    "/_main/products": {
      "filePath": "_main/products.tsx",
      "parent": "/_main"
    },
    "/_main/sellers": {
      "filePath": "_main/sellers.tsx",
      "parent": "/_main"
    },
    "/_main/settings": {
      "filePath": "_main/settings.tsx",
      "parent": "/_main"
    },
    "/_auth/auth": {
      "filePath": "_auth/auth.lazy.tsx",
      "parent": "/_auth"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/_main/_products/product-create": {
      "filePath": "_main/_products/product-create.tsx",
      "parent": "/_main"
    },
    "/_main/_seller/$id": {
      "filePath": "_main/_seller/$id.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
